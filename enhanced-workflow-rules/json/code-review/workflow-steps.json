{
  "workflowSteps": [
    {
      "name": "analyze_implementation_context",
      "description": "Analyze implementation and formulate testing strategy",
      "sequenceNumber": 1,
      "isRequired": true,
      "stepType": "ACTION",
      "approach": "Context-driven analysis with adaptive testing strategy",
      "approachGuidance": {
        "stepByStep": [
          "Execute TaskOperations.get to retrieve implementation context",
          "Analyze task type, tech stack, and implementation scope",
          "Identify highest-risk areas and integration points",
          "Formulate testing strategy appropriate for changes made",
          "Establish risk-based testing priorities"
        ]
      },
      "qualityChecklist": [
        "Implementation context and scope thoroughly analyzed",
        "Technology stack and architecture patterns identified",
        "Highest-risk areas for testing identified",
        "Testing strategy formulated for tech stack and changes",
        "Risk-based testing priorities established"
      ],
      "conditions": [],
      "actions": [
        {
          "name": "get_implementation_context",
          "actionType": "MCP_CALL",
          "actionData": {
            "serviceName": "TaskOperations",
            "operation": "get"
          },
          "sequenceOrder": 1
        }
      ]
    },
    {
      "name": "execute_targeted_validation",
      "description": "Execute focused validation based on testing strategy",
      "sequenceNumber": 2,
      "isRequired": true,
      "stepType": "ACTION",
      "approach": "Strategic testing execution with evidence collection",
      "approachGuidance": {
        "stepByStep": [
          "Execute testing strategy focusing on identified risk areas",
          "Apply validation methods appropriate for tech stack",
          "Test core functionality and integration points",
          "Assess code quality and pattern compliance",
          "Collect specific evidence of validation results"
        ]
      },
      "qualityChecklist": [
        "Testing strategy executed on highest-risk areas",
        "Validation methods appropriate for tech stack applied",
        "Core functionality thoroughly tested",
        "Integration points validated for proper operation",
        "Code quality assessed against established standards"
      ],
      "conditions": [
        {
          "name": "context_analysis_completed",
          "conditionType": "PREVIOUS_STEP_COMPLETED",
          "logic": {
            "check": "step_completed",
            "parameters": {
              "stepName": "analyze_implementation_context"
            }
          },
          "isRequired": true
        }
      ],
      "actions": []
    },
    {
      "name": "verify_acceptance_criteria",
      "description": "Verify acceptance criteria and synthesize evidence",
      "sequenceNumber": 3,
      "isRequired": true,
      "stepType": "ACTION",
      "approach": "Systematic acceptance criteria validation with evidence synthesis",
      "approachGuidance": {
        "stepByStep": [
          "Map validation results against acceptance criteria",
          "Verify each criterion satisfied with specific evidence",
          "Identify any gaps between requirements and implementation",
          "Synthesize evidence into clear quality assessment",
          "Prepare comprehensive evidence for decision making"
        ]
      },
      "qualityChecklist": [
        "All acceptance criteria mapped to validation evidence",
        "Each criterion verified with specific evidence",
        "Any gaps between requirements and implementation identified",
        "Evidence synthesized into clear quality assessment",
        "Comprehensive evidence prepared for review decision"
      ],
      "conditions": [
        {
          "name": "validation_completed",
          "conditionType": "PREVIOUS_STEP_COMPLETED",
          "logic": {
            "check": "step_completed",
            "parameters": {
              "stepName": "execute_targeted_validation"
            }
          },
          "isRequired": true
        }
      ],
      "actions": []
    },
    {
      "name": "make_review_decision",
      "description": "Make code review decision and execute appropriate transition",
      "sequenceNumber": 4,
      "isRequired": true,
      "stepType": "ACTION",
      "approach": "Evidence-based decision making with appropriate role transition",
      "approachGuidance": {
        "stepByStep": [
          "Make review decision based on validation evidence",
          "If approved: transition to integration-engineer for final steps",
          "If needs changes: transition to architect for revision",
          "Execute get_role_transitions with appropriate parameters",
          "Execute transition with comprehensive evidence in handoff"
        ]
      },
      "qualityChecklist": [
        "Review decision made based on validation evidence",
        "Appropriate transition path determined",
        "get_role_transitions executed with correct parameters",
        "Transition executed with comprehensive evidence",
        "Decision rationale and evidence properly communicated"
      ],
      "conditions": [
        {
          "name": "criteria_verification_completed",
          "conditionType": "PREVIOUS_STEP_COMPLETED",
          "logic": {
            "check": "step_completed",
            "parameters": {
              "stepName": "verify_acceptance_criteria"
            }
          },
          "isRequired": true
        }
      ],
      "actions": []
    }
  ]
}