{
  "workflowSteps": [
    {
      "name": "create_implementation_plan",
      "description": "Create implementation plan and subtasks in one integrated step",
      "sequenceNumber": 1,
      "isRequired": true,
      "stepType": "ACTION",
      "approach": "Iterative planning with immediate subtask creation to preserve context",
      "approachGuidance": {
        "stepByStep": [
          "Execute TaskOperations.get to retrieve comprehensive task context",
          "Check for existing plan using PlanningOperations.get_plan",
          "Create or update plan based on actual task requirements",
          "Create subtasks immediately while context is fresh",
          "Focus on implementation work, exclude documentation tasks"
        ]
      },
      "qualityChecklist": [
        "Task context and requirements understood",
        "Implementation plan created based on actual needs", 
        "Subtasks created focusing on real implementation work",
        "No documentation subtasks created",
        "Plan and subtasks validated against task goals"
      ],
      "conditions": [],
      "actions": [
        {
          "name": "get_task_context",
          "actionType": "MCP_CALL",
          "actionData": {
            "serviceName": "TaskOperations",
            "operation": "get"
          },
          "sequenceOrder": 1
        },
        {
          "name": "check_existing_plan",
          "actionType": "MCP_CALL",
          "actionData": {
            "serviceName": "PlanningOperations",
            "operation": "get_plan"
          },
          "sequenceOrder": 2
        },
        {
          "name": "create_or_update_plan",
          "actionType": "MCP_CALL",
          "actionData": {
            "serviceName": "PlanningOperations",
            "operation": "{{create_or_update_based_on_existing}}"
          },
          "sequenceOrder": 3
        },
        {
          "name": "create_subtasks",
          "actionType": "MCP_CALL",
          "actionData": {
            "serviceName": "PlanningOperations",
            "operation": "create_subtasks"
          },
          "sequenceOrder": 4
        }
      ]
    },
    {
      "name": "role_transition",
      "description": "Transition to senior developer with strategic context",
      "sequenceNumber": 2,
      "isRequired": true,
      "stepType": "ACTION",
      "approach": "Execute transition to senior developer with comprehensive implementation guidance",
      "approachGuidance": {
        "stepByStep": [
          "Execute get_role_transitions with fromRoleName: 'architect'",
          "Extract transitionId for architect to senior developer transition",
          "Execute execute_transition with strategic context in handoff",
          "Verify transition success and delegation confirmation"
        ]
      },
      "qualityChecklist": [
        "get_role_transitions executed with correct parameters",
        "Correct transitionId obtained for senior developer transition",
        "execute_transition executed with strategic context",
        "Transition success verified and delegation confirmed"
      ],
      "conditions": [
        {
          "name": "planning_completed",
          "conditionType": "PREVIOUS_STEP_COMPLETED",
          "logic": {
            "check": "step_completed",
            "parameters": {
              "stepName": "create_implementation_plan"
            }
          },
          "isRequired": true
        }
      ],
      "actions": []
    }
  ]
}