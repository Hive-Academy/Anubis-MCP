{
  "workflowSteps": [
    {
      "name": "git_setup and Memory_bank Analysis",
      "description": "Set up git branch for task work",
      "sequenceNumber": 1,
      "isRequired": true,
      "stepType": "ACTION",
      "approach": "Verify git status and create feature branch",
      "approachGuidance": {
        "stepByStep": [
          "Check git repository status with 'git status --porcelain'",
          "Handle any uncommitted changes appropriately",
          "Create feature branch with descriptive name",
          "Verify branch creation succeeded",
          "Check if memory-bank folder exists, if it exists, do Enhanced Memory Bank Analysis:",
          "1. memory-bank/ProjectOverview.md: Extract business context, features, stakeholder requirements, value propositions",
          "2. memory-bank/TechnicalArchitecture.md: Extract architecture patterns, component structure, technology stack, performance requirements",
          "3. memory-bank/DeveloperGuide.md: Extract implementation standards, coding patterns, quality guidelines, testing approaches"
        ]
      },
      "qualityChecklist": [
        "Git repository exists and functional",
        "Working directory status checked and handled",
        "Feature branch created with proper naming",
        "Branch checkout successful"
      ],
      "conditions": [
        {
          "name": "git_repository_exists",
          "conditionType": "DIRECTORY_EXISTS",
          "logic": {
            "check": "directory_exists",
            "parameters": {
              "directories": [".git"]
            }
          },
          "isRequired": true
        }
      ],
      "actions": []
    },
    {
      "name": "create_task_with_analysis",
      "description": "Analyze codebase and create task",
      "sequenceNumber": 2,
      "isRequired": true,
      "stepType": "ACTION",
      "approach": "Analyze project systematically then create task with findings",
      "approachGuidance": {
        "stepByStep": [
          "Analyze project structure and identify tech stack",
          "Test current functionality to verify capabilities",
          "Extract clear requirements from user request",
          "Create task with executionId and codebase analysis",
          "Update task status to 'in-progress'"
        ]
      },
      "qualityChecklist": [
        "Project structure and tech stack documented",
        "Current functionality tested and verified",
        "Requirements extracted and clearly defined",
        "Task created with executionId linked to workflow",
        "Task status updated to 'in-progress'"
      ],
      "conditions": [
        {
          "name": "git_setup_completed",
          "conditionType": "PREVIOUS_STEP_COMPLETED",
          "logic": {
            "check": "step_completed",
            "parameters": {
              "stepName": "git_setup"
            }
          },
          "isRequired": true
        }
      ],
      "actions": [
        {
          "name": "create_task",
          "actionType": "MCP_CALL",
          "actionData": {
            "serviceName": "TaskOperations",
            "operation": "create",
            "requiredParameters": [
              "executionId",
              "taskData",
              "description",
              "codebaseAnalysis"
            ]
          },
          "sequenceOrder": 1
        },
        {
          "name": "update_task_status",
          "actionType": "MCP_CALL",
          "actionData": {
            "serviceName": "TaskOperations",
            "operation": "update",
            "requiredParameters": ["taskId", "taskData"]
          },
          "sequenceOrder": 2
        }
      ]
    },
    {
      "name": "research_decision",
      "description": "Decide if research is needed based on task complexity",
      "sequenceNumber": 3,
      "isRequired": true,
      "stepType": "DECISION",
      "approach": "Test current system, evaluate task complexity, decide research necessity",
      "approachGuidance": {
        "stepByStep": [
          "Review task requirements and current system capabilities",
          "Test existing functionality to confirm what works",
          "Evaluate if technologies/patterns are familiar or unknown",
          "Apply decision criteria: research needed vs direct implementation",
          "Document decision with clear reasoning"
        ]
      },
      "qualityChecklist": [
        "Current system capabilities tested and confirmed",
        "Task complexity evaluated against known capabilities",
        "Decision made: research needed or direct to architect",
        "Decision reasoning documented clearly",
        "Next role determined (researcher or architect)"
      ],
      "conditions": [
        {
          "name": "task_creation_completed",
          "conditionType": "PREVIOUS_STEP_COMPLETED",
          "logic": {
            "check": "step_completed",
            "parameters": {
              "stepName": "create_task_with_analysis"
            }
          },
          "isRequired": true
        }
      ],
      "actions": []
    },
    {
      "name": "role_transition",
      "description": "Transition to next role based on research decision",
      "sequenceNumber": 4,
      "isRequired": true,
      "stepType": "ACTION",
      "approach": "Get correct transition ID, then execute transition to researcher or architect",
      "approachGuidance": {
        "stepByStep": [
          "Determine target role based on research decision (researcher or architect)",
          "Execute get_role_transitions with fromRoleName: 'boomerang', taskId, and roleId",
          "Extract correct transitionId from response based on target role",
          "Execute execute_transition with obtained transitionId and handoff message",
          "Verify transition success and delegation record creation"
        ]
      },
      "qualityChecklist": [
        "Target role determined based on research decision",
        "get_role_transitions executed with correct parameters",
        "Correct transitionId obtained from response (not placeholder)",
        "execute_transition executed with proper transitionId",
        "Handoff message includes task context and analysis",
        "Transition success verified and delegation confirmed"
      ],
      "conditions": [
        {
          "name": "research_decision_completed",
          "conditionType": "PREVIOUS_STEP_COMPLETED",
          "logic": {
            "check": "step_completed",
            "parameters": {
              "stepName": "research_decision"
            }
          },
          "isRequired": true
        }
      ],
      "actions": []
    }
  ]
}
