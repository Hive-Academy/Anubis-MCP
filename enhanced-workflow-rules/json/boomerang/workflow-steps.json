{
  "workflowSteps": [
    {
      "name": "git_setup_and_memory_analysis",
      "description": "Establish git workflow foundation and extract project context from memory bank and documentation.",
      "sequenceNumber": 1,
      "isRequired": true,
      "stepType": "ACTION",
      "approach": "Git setup with project context extraction to establish implementation foundation.",
      "approachGuidance": {
        "stepByStep": [
          "üîß GIT WORKFLOW ESTABLISHMENT:",
          "Check repository state: 'git status --porcelain', 'git branch', 'git log --oneline -5'",
          "ASK USER for branch strategy: 'Continue on current branch [name] or create new feature branch?'",
          "Execute user's decision:",
          "  - If continuing: Verify not on main/master for safety",
          "  - If new branch: 'git checkout -b [user-specified-name]'",
          "Handle uncommitted changes:",
          "  - If changes exist: Commit with 'git add . && git commit -m \"WIP: Preparing for [task]\"'",
          "  - If conflicts exist: Ask user to resolve before proceeding",
          "  - If repository dirty: Offer to stash changes as alternative",
          "üìö PROJECT CONTEXT EXTRACTION:",
          "IF memory-bank exists:",
          "  - Analyze ProjectOverview.md, TechnicalArchitecture.md, DeveloperGuide.md",
          "  - If files corrupted/incomplete: Note gaps and proceed with available information",
          "  - Extract business objectives, technical constraints, development practices",
          "IF no memory-bank exists:",
          "  - Scan for README.md, package.json, requirements.txt, or similar project files",
          "  - If no documentation found: Note this limitation and proceed with codebase analysis only",
          "üìã DOCUMENT KEY CONTEXT (3-5 points maximum):",
          "  - Business objective and user value proposition",
          "  - Technical architecture pattern and key constraints",
          "  - Development workflow and quality standards",
          "  - Critical dependencies and known risks",
          "  - Documentation gaps or assumptions made"
        ]
      },
      "qualityChecklist": [
        "‚úÖ Repository state analyzed and stabilized for development",
        "‚úÖ User consulted and branch strategy successfully implemented",
        "‚úÖ Memory bank or available project documentation analyzed",
        "‚úÖ Key business and technical context documented with gap acknowledgment",
        "‚úÖ Git workflow established and ready for implementation work",
        "‚úÖ Any limitations or assumptions clearly documented for next steps"
      ]
    },
    {
      "name": "codebase_analysis",
      "description": "Analyze live codebase to understand implementation patterns and supplement memory bank context.",
      "sequenceNumber": 2,
      "isRequired": true,
      "stepType": "ACTION",
      "approach": "Live codebase analysis focusing on current implementation state and patterns not covered in documentation.",
      "approachGuidance": {
        "stepByStep": [
          "üîç ARCHITECTURE PATTERN ANALYSIS:",
          "Use semantic searches for: 'controller', 'service', 'repository', 'model', 'component'",
          "Analyze directory structure and identify organizational patterns (MVC, Clean, Layered, Microservices)",
          "Document data flow patterns and communication boundaries",
          "If unfamiliar patterns found: Research architectural style and document findings",
          "üíª TECHNOLOGY STACK VERIFICATION:",
          "Identify current versions and configurations:",
          "  - Primary language, frameworks, databases, build tools",
          "  - Testing frameworks, deployment tools, development dependencies",
          "  - If version conflicts detected: Flag compatibility issues for research phase",
          "üîå INTEGRATION POINTS MAPPING:",
          "Analyze API endpoints, database connections, authentication mechanisms",
          "Identify external services, file storage, logging, monitoring setup",
          "Map message queues, event systems, or pub/sub patterns if present",
          "üìä CODE QUALITY ASSESSMENT:",
          "Review formatting/linting config, naming conventions, error handling patterns",
          "Assess testing coverage, documentation standards, performance optimizations",
          "If inconsistent patterns found: Document variations and recommend standardization",
          "‚ö†Ô∏è CONSTRAINTS AND RISK IDENTIFICATION:",
          "Document technical debt, performance bottlenecks, security requirements",
          "Note browser compatibility, third-party limitations, deployment constraints",
          "Flag potential breaking changes or migration requirements",
          "üö® ANALYSIS BOUNDARIES:",
          "If codebase extremely large (>10k files): Focus on core modules and document scope limitation",
          "If analysis takes >20 minutes: Summarize findings and proceed with available information"
        ]
      },
      "qualityChecklist": [
        "‚úÖ Architecture patterns identified and documented with confidence level",
        "‚úÖ Technology stack and versions verified with compatibility assessment",
        "‚úÖ Integration points and external dependencies comprehensively mapped",
        "‚úÖ Code quality standards and conventions assessed across codebase",
        "‚úÖ Technical constraints, risks, and potential issues documented",
        "‚úÖ Analysis scope and any limitations clearly documented",
        "‚úÖ Implementation landscape sufficiently understood for strategic planning"
      ]
    },
    {
      "name": "task_creation_with_gathered_context",
      "description": "Create comprehensive task using all gathered context and analysis findings.",
      "sequenceNumber": 3,
      "isRequired": true,
      "stepType": "ACTION",
      "approach": "Task creation incorporating business requirements and technical analysis into actionable specifications.",
      "approachGuidance": {
        "stepByStep": [
          "üéØ REQUIREMENTS SYNTHESIS:",
          "Combine user requirements with business objectives from Step 1 context",
          "Integrate technical constraints and patterns identified in Step 2",
          "Reconcile any conflicts between user requests and technical limitations",
          "If requirements conflict: Document trade-offs and recommend prioritization",
          "üìã COMPREHENSIVE TASK DATA PREPARATION:",
          "Structure task with complete context integration:",
          "  - Title: Clear, action-oriented, specific to business objective",
          "  - Description: Business context + technical scope + integration requirements",
          "  - Acceptance Criteria: Specific, measurable, testable outcomes",
          "  - Priority: HIGH/MEDIUM/LOW based on business impact and technical risk",
          "  - Complexity: 1-10 scale with justification based on analysis findings",
          "üîó MCP TASK CREATION EXECUTION:",
          "Execute TaskOperations.create with comprehensive parameters:",
          "  - serviceName: 'TaskOperations', operation: 'create'",
          "  - MANDATORY: executionId: '{{ executionIdValue }}' for workflow linkage",
          "  - taskData: Complete business and technical requirements",
          "  - codebaseAnalysis: All findings from Step 2 including risks and constraints",
          "  - description: User requirements + business context + technical integration points",
          "üîÑ TASK CREATION VERIFICATION:",
          "Verify MCP operation success and validate task completeness:",
          "  - Confirm task created with proper execution linkage",
          "  - Validate all context properly integrated",
          "  - If creation fails: Document error and attempt retry with simplified parameters"
        ]
      },
      "qualityChecklist": [
        "‚úÖ Requirements successfully synthesized from all previous analysis",
        "‚úÖ Conflicts between user requests and technical constraints reconciled",
        "‚úÖ Task data comprehensively prepared with measurable acceptance criteria",
        "‚úÖ Business impact and technical complexity accurately assessed",
        "‚úÖ TaskOperations.create executed successfully with all required parameters",
        "‚úÖ Execution ID linkage verified ({{ executionIdValue }}) for workflow continuity",
        "‚úÖ Codebase analysis findings and business context fully integrated",
        "‚úÖ Task creation success confirmed with error handling if needed"
      ],
      "conditions": [
        {
          "name": "validation_and_analysis_completed",
          "conditionType": "PREVIOUS_STEP_COMPLETED",
          "logic": {
            "check": "step_completed",
            "parameters": {
              "stepName": "codebase_analysis"
            }
          },
          "isRequired": true
        }
      ]
    },
    {
      "name": "research_evaluation_and_persistence",
      "description": "Evaluate research needs and persist findings to support implementation decisions.",
      "sequenceNumber": 4,
      "isRequired": true,
      "stepType": "ACTION",
      "approach": "Strategic research assessment with focused investigation and systematic persistence of findings.",
      "approachGuidance": {
        "stepByStep": [
          "üîç STRATEGIC RESEARCH ASSESSMENT:",
          "Evaluate task requirements for critical knowledge gaps using specific criteria:",
          "  - Technologies/frameworks not identified in codebase analysis",
          "  - Integration patterns not documented in memory bank",
          "  - Security/compliance requirements with unclear implementation",
          "  - Performance optimization opportunities requiring external validation",
          "  - Framework versions with breaking changes or migration requirements",
          "DECISION CRITERIA for research requirement:",
          "  - HIGH PRIORITY: Unknown technologies affecting core implementation",
          "  - MEDIUM PRIORITY: Best practices for identified patterns needing validation",
          "  - LOW PRIORITY: Optimization opportunities that don't affect basic functionality",
          "  - NO RESEARCH: All implementation approaches well-understood from analysis",
          "üî¨ FOCUSED RESEARCH EXECUTION (IF REQUIRED - max 30 minutes):",
          "If research deemed necessary, execute systematic investigation:",
          "  - PRIMARY: Official documentation and GitHub repositories",
          "  - SECONDARY: Package registries (NPM, PyPI) for compatibility",
          "  - VALIDATION: Technical articles from reputable sources (not forums)",
          "  - COMMUNITY: Stack Overflow for specific implementation patterns only",
          "üìö FINDINGS VALIDATION AND SYNTHESIS:",
          "Cross-reference information across multiple authoritative sources:",
          "  - Verify compatibility with identified technology stack",
          "  - Validate security implications and compliance requirements",
          "  - Assess performance implications and optimization opportunities",
          "  - Document conflicting information and recommend resolution",
          "üìä FINDINGS ORGANIZATION BY IMPLEMENTATION PRIORITY:",
          "  - CRITICAL DECISIONS: Framework choices, architecture patterns, security approaches",
          "  - IMPLEMENTATION GUIDANCE: Best practices, code patterns, configuration",
          "  - RISK MITIGATION: Security considerations, performance implications, compatibility",
          "  - OPTIMIZATION OPPORTUNITIES: Performance improvements, scalability enhancements",
          "üíæ RESEARCH PERSISTENCE WITH MCP OPERATION:",
          "Execute ResearchOperations.create_research with comprehensive data:",
          "  - serviceName: 'ResearchOperations', operation: 'create_research'",
          "  - MANDATORY: taskId parameter linking to task created in Step 3",
          "  - Include research methodology, sources, and validation approach",
          "  - Document conflicting findings and recommended resolution paths",
          "  - Specify risk assessments and mitigation strategies with evidence",
          "üö® RESEARCH COMPLETION SCENARIOS:",
          "If no critical research needed: Document decision rationale and proceed",
          "If research inconclusive: Document limitations and proceed with acknowledged risks",
          "If research reveals blocking issues: Escalate findings and recommend task modification"
        ]
      },
      "qualityChecklist": [
        "‚úÖ Research requirements evaluated using specific, objective criteria",
        "‚úÖ Research decision properly justified with clear reasoning",
        "‚úÖ Investigation limited to implementation-critical knowledge gaps only",
        "‚úÖ Multiple authoritative sources validated and cross-referenced",
        "‚úÖ Technology compatibility and constraints verified against current stack",
        "‚úÖ Conflicting information acknowledged with resolution recommendations",
        "‚úÖ Actionable recommendations developed with evidence and risk assessment",
        "‚úÖ ResearchOperations.create_research executed successfully with complete data",
        "‚úÖ Research properly linked to task via taskId parameter for traceability",
        "‚úÖ Edge cases handled: no research needed, inconclusive results, blocking issues"
      ]
    },
    {
      "name": "strategic_decision_and_architect_transition",
      "description": "Transition to architect role with comprehensive context handoff",
      "sequenceNumber": 5,
      "isRequired": true,
      "stepType": "TRANSITION",
      "approach": "Get correct transition ID, then execute transition to researcher or architect",
      "approachGuidance": {
        "stepByStep": [
          "Determine target role based on research decision (researcher or architect)",
          "Execute get_role_transitions with fromRoleName: 'boomerang', taskId, and roleId",
          "Extract correct transitionId from response based on target role",
          "Execute execute_transition with obtained transitionId and handoff message",
          "Verify transition success and delegation record creation"
        ]
      },
      "qualityChecklist": [
        "Target role determined based on research decision",
        "get_role_transitions executed with correct parameters",
        "Correct transitionId obtained from response (not placeholder)",
        "execute_transition executed with proper transitionId",
        "Handoff message includes task context and analysis",
        "Transition success verified and delegation confirmed"
      ]
    }
  ]
}


