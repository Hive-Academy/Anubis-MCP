{
  "workflowSteps": [
    {
      "name": "turbo_intelligent_setup_and_context",
      "description": "Intelligent context gathering with git setup, memory bank analysis, and smart research decision-making",
      "sequenceNumber": 1,
      "isRequired": true,
      "stepType": "ACTION",
      "approach": "Smart context aggregation with intelligent research decision integration",
      "approachGuidance": {
        "stepByStep": [
          "1. Check git repository status with 'git status --porcelain' and handle uncommitted changes by creating feature branch: 'turbo/[task-description]'",
          "2. Check for existing workflow context from active executions and extract key insights from memory-bank (ProjectOverview.md, TechnicalArchitecture.md, DeveloperGuide.md) if available",
          "3. Analyze project structure and tech stack (only if not available in context) and extract clear requirements from user request",
          "4. Evaluate task complexity: Known technologies/patterns → Direct implementation | Unknown patterns/integration challenges → Research needed | New external APIs/libraries → Research needed | Complex architectural decisions → Research needed",
          "5. IF research needed: Execute integrated research process: Identify critical research questions, Conduct focused research, Extract actionable implementation recommendations, Create research findings using ResearchOperations.create_research with get_operation_schema('ResearchOperations', 'create_research')",
          "6. ELSE: Proceed with existing knowledge and patterns"
        ]
      },
      "qualityChecklist": [
        "Git repository functional with clean feature branch created",
        "Existing context intelligently gathered and validated",
        "Memory bank insights extracted (if available)",
        "Project structure and tech stack understood",
        "Requirements clearly extracted from user request",
        "Research necessity decision made with clear reasoning",
        "If research conducted: Critical questions identified and answered",
        "If research conducted: Actionable implementation recommendations documented",
        "Complete context prepared for enhanced subtask creation"
      ],
      "conditions": [
        {
          "name": "git_repository_exists",
          "conditionType": "DIRECTORY_EXISTS",
          "logic": {
            "check": "directory_exists",
            "parameters": {
              "directories": [".git"]
            }
          },
          "isRequired": true
        }
      ],
      "actions": []
    },
    {
      "name": "turbo_enhanced_task_and_subtask_creation",
      "description": "Create task with research-enhanced subtasks containing complete implementation context",
      "sequenceNumber": 2,
      "isRequired": true,
      "stepType": "ACTION",
      "approach": "Create comprehensive task with research-informed subtasks for immediate execution",
      "approachGuidance": {
        "stepByStep": [
          "1. Create task with enhanced subtasks using TaskOperations.create_with_subtasks: Use get_operation_schema('TaskOperations', 'create_with_subtasks') to get correct parameters. Include executionId, taskData, description, codebaseAnalysis, and subtasks. Break down implementation into focused subtasks (3-7 maximum).",
          "2. For each subtask, include comprehensive implementation details: Implementation Strategy (detailed approach leveraging research findings), Research-Informed Decisions (technical decisions based on research if conducted), Specific Implementation Path (exact files to modify with code examples), Architecture Integration (how subtask aligns with existing patterns), Quality Framework (testing requirements, validation steps, quality gates), Performance & Security (targets and considerations from research), Dependencies & Integration (points and external dependencies identified).",
          "3. Apply Subtask Enhancement Principles: Incorporate research recommendations directly into implementation approach, specify exact code patterns and architectural decisions, include validation criteria that leverage research insights, ensure subtasks are implementation-ready without additional research, organize in logical execution batches with clear dependencies.",
          "4. Update task status to 'in-progress' using TaskOperations.update: Use get_operation_schema('TaskOperations', 'update') for correct parameters, include taskId and taskData with status: 'in-progress'."
        ]
      },
      "qualityChecklist": [
        "Task created with comprehensive context including research insights",
        "Task linked to workflow execution with executionId",
        "Subtasks (3-7 maximum) created with research-enhanced implementation context",
        "Each subtask includes research-informed technical decisions and approach",
        "Each subtask specifies exact files, code patterns, and architectural integration",
        "Quality constraints include research-based validation and testing requirements",
        "Performance targets and security considerations integrated from research",
        "Dependencies and integration points clearly defined with research insights",
        "Subtasks are implementation-ready without requiring additional research",
        "Logical batch organization with clear sequencing and dependencies",
        "Task status updated to 'in-progress' for immediate execution"
      ],
      "conditions": [
        {
          "name": "intelligent_setup_completed",
          "conditionType": "PREVIOUS_STEP_COMPLETED",
          "logic": {
            "check": "step_completed",
            "parameters": {
              "stepName": "turbo_intelligent_setup_and_context"
            }
          },
          "isRequired": true
        }
      ],
      "actions": []
    },
    {
      "name": "turbo_execution_and_completion",
      "description": "Rapid implementation execution with integrated testing, validation, and workflow completion",
      "sequenceNumber": 3,
      "isRequired": true,
      "stepType": "ACTION",
      "approach": "Streamlined execution loop with comprehensive testing and immediate completion",
      "approachGuidance": {
        "stepByStep": [
          "1. Phase 1 - Context Preparation: Get task context with all subtasks using TaskOperations.get with get_operation_schema('TaskOperations', 'get') including taskId and includeSubtasks=true. Validate research-enhanced implementation approach is clear.",
          "2. Phase 2 - Rapid Implementation Loop: For each subtask: Get next subtask using SubtaskOperations.get_next_subtask, Update status to 'in-progress' using SubtaskOperations.update_subtask, Implement using research-informed approach, Execute immediate validation (unit/integration/manual tests), Commit changes with research-context-aware messages, Update subtask to 'completed' with comprehensive evidence.",
          "3. Phase 3 - Integrated Completion: Run complete test suite for regression validation, Validate all acceptance criteria against original requirements, Verify code follows SOLID principles and research recommendations, Ensure clean and descriptive git history, Update task to 'completed' with comprehensive evidence using TaskOperations.update.",
          "4. Finalize Workflow: Execute workflow completion using WorkflowOperations.complete_execution with get_operation_schema('WorkflowOperations', 'complete_execution'), Include executionId and completionData with research integration success, Document research integration success and quality metrics."
        ]
      },
      "qualityChecklist": [
        "Task context retrieved with research-enhanced subtasks",
        "All subtasks processed and completed using research-informed approach",
        "Each implementation follows research recommendations and established patterns",
        "Comprehensive testing performed (unit, integration, manual) with research validation",
        "Git commits include research context and clear implementation messages",
        "All subtasks completed with detailed evidence including research integration",
        "Complete test suite validates no regressions with research recommendations applied",
        "All acceptance criteria met with research-enhanced quality standards",
        "Code follows SOLID principles and incorporates research best practices",
        "Git history is clean with research-context-aware commit messages",
        "Task completed with comprehensive evidence of research integration success",
        "Workflow execution completed with research impact documented in deliverables"
      ],
      "conditions": [
        {
          "name": "enhanced_task_creation_completed",
          "conditionType": "PREVIOUS_STEP_COMPLETED",
          "logic": {
            "check": "step_completed",
            "parameters": {
              "stepName": "turbo_enhanced_task_and_subtask_creation"
            }
          },
          "isRequired": true
        }
      ],
      "actions": []
    }
  ]
}
