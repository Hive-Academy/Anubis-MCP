{
  "name": "@hive-academy/mcp-workflow-manager",
  "version": "1.0.4",
  "description": "A comprehensive Model Context Protocol server for AI workflow automation and task management in Cursor IDE and other MCP-compatible clients. Provides structured, role-based workflow coordination between different AI modes with persistent task tracking and implementation planning.",
  "author": "Hive Academy <abdallah@nghive.tech>",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Hive-Academy/Workflow_Manager_MCP.git"
  },
  "homepage": "https://github.com/Hive-Academy/Workflow_Manager_MCP#readme",
  "bugs": {
    "url": "https://github.com/Hive-Academy/Workflow_Manager_MCP/issues"
  },
  "keywords": [
    "mcp",
    "model-context-protocol",
    "workflow",
    "ai",
    "automation",
    "task-management",
    "cursor",
    "nestjs",
    "prisma",
    "docker",
    "reporting",
    "analytics",
    "playwright"
  ],
  "main": "dist/cli.js",
  "bin": {
    "mcp-workflow-manager": "./dist/cli.js"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "files": [
    "dist/**/*",
    "prisma/**/*",
    "package.json",
    "README.md",
    "LICENSE"
  ],
  "scripts": {
    "prebuild": "rimraf dist",
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "db:migrate": "npx prisma migrate deploy",
    "db:generate": "npx prisma generate",
    "db:init": "npm run db:generate && npm run db:migrate",
    "postinstall": "npm run setup:conditional",
    "setup:conditional": "node -e \"const fs = require('fs'); const path = require('path'); const isNpx = process.env.npm_config_cache && process.env.npm_config_cache.includes('.npm/_npx'); const isGlobal = process.env.npm_config_global === 'true'; if (isNpx || isGlobal) { console.log('üîß NPX/Global installation detected - preparing Prisma client...'); try { require('child_process').execSync('npx prisma generate', { stdio: 'inherit', cwd: process.cwd() }); console.log('‚úÖ Prisma client prepared for NPX usage'); } catch (error) { console.warn('‚ö†Ô∏è Prisma client preparation failed - will be handled at runtime'); } } else { console.log('üì¶ Local installation - Prisma client will be generated at runtime if needed'); }\"",
    "setup:force": "npm run db:generate",
    "playwright:install": "playwright install chromium",
    "playwright:install-deps": "playwright install-deps chromium",
    "test:clean-system": "node scripts/test-clean-system.js",
    "test:clean-system-verbose": "node scripts/test-clean-system.js --verbose",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json"
  },
  "dependencies": {
    "@modelcontextprotocol/sdk": "^1.11.4",
    "@nestjs/common": "^11.0.1",
    "@nestjs/config": "^4.0.2",
    "@nestjs/core": "^11.0.1",
    "@nestjs/platform-express": "^11.0.1",
    "@prisma/client": "^6.8.2",
    "@rekog/mcp-nest": "^1.5.2",
    "@types/express": "^4.17.21",
    "ejs": "^3.1.10",
    "express": "^4.19.2",
    "fastmcp": "^1.27.6",
    "handlebars": "^4.7.8",
    "hbs": "^4.2.0",
    "playwright": "^1.48.2",
    "prisma": "^6.8.2",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.1",
    "uuid": "^11.1.0",
    "zod": "^3.24.4"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.2.0",
    "@eslint/js": "^9.18.0",
    "@nestjs/cli": "^11.0.0",
    "@nestjs/schematics": "^11.0.0",
    "@nestjs/testing": "^11.0.1",
    "@swc/cli": "^0.6.0",
    "@swc/core": "^1.10.7",
    "@types/ejs": "^3.1.5",
    "@types/jest": "^29.5.14",
    "@types/node": "^22.10.7",
    "@types/supertest": "^6.0.2",
    "@types/uuid": "^10.0.0",
    "eslint": "^9.18.0",
    "eslint-config-prettier": "^10.0.1",
    "eslint-plugin-prettier": "^5.2.2",
    "globals": "^16.0.0",
    "jest": "^29.7.0",
    "prettier": "^3.4.2",
    "rimraf": "^6.0.1",
    "source-map-support": "^0.5.21",
    "supertest": "^7.0.0",
    "ts-jest": "^29.2.5",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.7.3",
    "typescript-eslint": "^8.20.0"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  },
  "optionalDependencies": {
    "playwright": "^1.48.2"
  }
}
