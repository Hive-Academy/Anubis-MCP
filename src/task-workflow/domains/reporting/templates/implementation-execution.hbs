{{> layouts/base title="Implementation Execution" subtitle="Task implementation execution analysis"}}

{{#*inline "content"}}
<div class="space-y-8">
  <!-- Execution Overview -->
  <div class="bg-gradient-to-r from-violet-50 to-purple-50 rounded-xl p-6 border border-violet-200">
    <h2 class="text-2xl font-bold text-gray-800 mb-4 flex items-center">
      <svg class="w-6 h-6 mr-2 text-violet-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4"></path>
      </svg>
      Implementation Execution Analysis
    </h2>
    <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
      <div class="bg-white rounded-lg p-4 shadow-sm">
        <div class="text-2xl font-bold text-violet-600">{{execution.completionRate}}%</div>
        <div class="text-sm text-gray-600">Completion Rate</div>
      </div>
      <div class="bg-white rounded-lg p-4 shadow-sm">
        <div class="text-2xl font-bold text-green-600">{{execution.qualityScore}}%</div>
        <div class="text-sm text-gray-600">Quality Score</div>
      </div>
      <div class="bg-white rounded-lg p-4 shadow-sm">
        <div class="text-2xl font-bold text-blue-600">{{execution.velocity}}</div>
        <div class="text-sm text-gray-600">Velocity (tasks/day)</div>
      </div>
      <div class="bg-white rounded-lg p-4 shadow-sm">
        <div class="text-2xl font-bold text-orange-600">{{execution.blockerCount}}</div>
        <div class="text-sm text-gray-600">Active Blockers</div>
      </div>
    </div>
  </div>

  <!-- Implementation Progress -->
  <div class="bg-white rounded-xl shadow-lg p-6">
    <h3 class="text-xl font-semibold text-gray-800 mb-4 flex items-center">
      <svg class="w-5 h-5 mr-2 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
    </svg>
    Implementation Progress by Batch
    </h3>
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
      <div>
        <canvas id="batchProgressChart" width="400" height="300"></canvas>
      </div>
      <div class="space-y-4">
        {{#each execution.batches}}
        <div class="border rounded-lg p-4 {{this.statusBorderClass}}">
          <div class="flex items-center justify-between mb-2">
            <h4 class="font-semibold text-gray-800">{{this.title}}</h4>
            <span class="px-2 py-1 text-xs rounded-full {{this.statusClass}}">{{this.status}}</span>
          </div>
          <div class="w-full bg-gray-200 rounded-full h-2 mb-2">
            <div class="bg-{{this.color}}-500 h-2 rounded-full" style="width: {{this.progress}}%"></div>
          </div>
          <div class="flex justify-between text-sm">
            <span>{{this.completedTasks}}/{{this.totalTasks}} tasks</span>
            <span class="{{this.progressClass}}">{{this.progress}}%</span>
          </div>
        </div>
        {{/each}}
      </div>
    </div>
  </div>

  <!-- Code Quality Metrics -->
  <div class="bg-white rounded-xl shadow-lg p-6">
    <h3 class="text-xl font-semibold text-gray-800 mb-4 flex items-center">
      <svg class="w-5 h-5 mr-2 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
      </svg>
      Code Quality Assessment
    </h3>
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
      {{#each quality.metrics}}
      <div class="bg-{{this.color}}-50 rounded-lg p-4 border border-{{this.color}}-200">
        <div class="flex items-center justify-between mb-2">
          <h4 class="font-semibold text-{{this.color}}-800">{{this.name}}</h4>
          <svg class="w-5 h-5 text-{{this.color}}-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="{{this.icon}}"></path>
          </svg>
        </div>
        <div class="text-2xl font-bold text-{{this.color}}-700 mb-1">{{this.value}}</div>
        <div class="text-sm text-{{this.color}}-600">{{this.description}}</div>
        <div class="mt-2">
          <div class="w-full bg-{{this.color}}-200 rounded-full h-1">
            <div class="bg-{{this.color}}-500 h-1 rounded-full" style="width: {{this.percentage}}%"></div>
          </div>
        </div>
      </div>
      {{/each}}
    </div>
  </div>

  <!-- Files Modified -->
  <div class="bg-white rounded-xl shadow-lg p-6">
    <h3 class="text-xl font-semibold text-gray-800 mb-4 flex items-center">
      <svg class="w-5 h-5 mr-2 text-indigo-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
      </svg>
      Implementation Impact
    </h3>
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
      <div>
        <canvas id="filesChart" width="400" height="300"></canvas>
      </div>
      <div class="space-y-4">
        <div class="bg-blue-50 rounded-lg p-4">
          <h4 class="font-semibold text-blue-800 mb-2">File Statistics</h4>
          <div class="space-y-2 text-sm">
            <div class="flex justify-between">
              <span>Files modified:</span>
              <span class="font-medium text-blue-600">{{files.modified}}</span>
            </div>
            <div class="flex justify-between">
              <span>Files created:</span>
              <span class="font-medium text-green-600">{{files.created}}</span>
            </div>
            <div class="flex justify-between">
              <span>Lines added:</span>
              <span class="font-medium text-emerald-600">+{{files.linesAdded}}</span>
            </div>
            <div class="flex justify-between">
              <span>Lines removed:</span>
              <span class="font-medium text-red-600">-{{files.linesRemoved}}</span>
            </div>
          </div>
        </div>
        <div class="bg-gray-50 rounded-lg p-4">
          <h4 class="font-semibold text-gray-800 mb-2">Impact Areas</h4>
          <div class="space-y-2">
            {{#each files.impactAreas}}
            <div class="flex items-center justify-between">
              <span class="text-sm text-gray-700">{{this.area}}</span>
              <span class="px-2 py-1 text-xs rounded-full {{this.impactClass}}">{{this.impact}}</span>
            </div>
            {{/each}}
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Testing Coverage -->
  <div class="bg-white rounded-xl shadow-lg p-6">
    <h3 class="text-xl font-semibold text-gray-800 mb-4 flex items-center">
      <svg class="w-5 h-5 mr-2 text-emerald-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4M7.835 4.697a3.42 3.42 0 001.946-.806 3.42 3.42 0 014.438 0 3.42 3.42 0 001.946.806 3.42 3.42 0 013.138 3.138 3.42 3.42 0 00.806 1.946 3.42 3.42 0 010 4.438 3.42 3.42 0 00-.806 1.946 3.42 3.42 0 01-3.138 3.138 3.42 3.42 0 00-1.946.806 3.42 3.42 0 01-4.438 0 3.42 3.42 0 00-1.946-.806 3.42 3.42 0 01-3.138-3.138 3.42 3.42 0 00-.806-1.946 3.42 3.42 0 010-4.438 3.42 3.42 0 00.806-1.946 3.42 3.42 0 013.138-3.138z"></path>
      </svg>
      Testing & Validation
    </h3>
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
      <div>
        <canvas id="testingChart" width="400" height="300"></canvas>
      </div>
      <div class="space-y-4">
        {{#each testing.categories}}
        <div class="border rounded-lg p-4">
          <div class="flex items-center justify-between mb-2">
            <h4 class="font-semibold text-gray-800">{{this.name}}</h4>
            <span class="px-2 py-1 text-xs rounded-full {{this.statusClass}}">{{this.status}}</span>
          </div>
          <div class="w-full bg-gray-200 rounded-full h-2 mb-2">
            <div class="bg-{{this.color}}-500 h-2 rounded-full" style="width: {{this.coverage}}%"></div>
          </div>
          <div class="flex justify-between text-sm">
            <span>Coverage: {{this.coverage}}%</span>
            <span>{{this.testsRun}}/{{this.totalTests}} tests</span>
          </div>
        </div>
        {{/each}}
      </div>
    </div>
  </div>

  <!-- Performance Metrics -->
  <div class="bg-white rounded-xl shadow-lg p-6">
    <h3 class="text-xl font-semibold text-gray-800 mb-4 flex items-center">
      <svg class="w-5 h-5 mr-2 text-yellow-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
      </svg>
      Performance Analysis
    </h3>
    <div class="mb-4">
      <canvas id="performanceChart" width="800" height="400"></canvas>
    </div>
    <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
      {{#each performance.metrics}}
      <div class="bg-{{this.color}}-50 rounded-lg p-4">
        <h4 class="font-semibold text-{{this.color}}-800 mb-2">{{this.category}}</h4>
        <div class="space-y-2 text-sm">
          {{#each this.items}}
          <div class="flex justify-between">
            <span class="text-{{../color}}-700">{{this.metric}}:</span>
            <span class="font-medium {{this.valueClass}}">{{this.value}}</span>
          </div>
          {{/each}}
        </div>
      </div>
      {{/each}}
    </div>
  </div>

  <!-- Implementation Timeline -->
  <div class="bg-white rounded-xl shadow-lg p-6">
    <h3 class="text-xl font-semibold text-gray-800 mb-4 flex items-center">
      <svg class="w-5 h-5 mr-2 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
      </svg>
      Implementation Timeline
    </h3>
    <div class="space-y-4">
      {{#each timeline}}
      <div class="flex items-start space-x-4">
        <div class="flex-shrink-0">
          <div class="w-8 h-8 rounded-full bg-{{this.statusColor}}-100 flex items-center justify-center">
            <svg class="w-4 h-4 text-{{this.statusColor}}-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="{{this.icon}}"></path>
            </svg>
          </div>
        </div>
        <div class="flex-1 min-w-0">
          <div class="flex items-center justify-between">
            <p class="text-sm font-medium text-gray-900">{{this.milestone}}</p>
            <p class="text-sm text-gray-500">{{this.timestamp}}</p>
          </div>
          <p class="text-sm text-gray-600">{{this.description}}</p>
          {{#if this.metrics}}
          <div class="mt-2 flex space-x-4 text-xs text-gray-500">
            {{#each this.metrics}}
            <span>{{this.label}}: <strong>{{this.value}}</strong></span>
            {{/each}}
          </div>
          {{/if}}
        </div>
      </div>
      {{/each}}
    </div>
  </div>

  <!-- Blockers & Issues -->
  <div class="bg-white rounded-xl shadow-lg p-6">
    <h3 class="text-xl font-semibold text-gray-800 mb-4 flex items-center">
      <svg class="w-5 h-5 mr-2 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z"></path>
      </svg>
      Blockers & Issues
    </h3>
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
      <div>
        <h4 class="font-semibold text-gray-800 mb-3">Active Blockers</h4>
        <div class="space-y-3">
          {{#each blockers.active}}
          <div class="border-l-4 border-{{this.severity}}-400 bg-{{this.severity}}-50 p-3 rounded-r-lg">
            <div class="flex items-center justify-between mb-1">
              <span class="text-sm font-medium text-{{this.severity}}-800">{{this.title}}</span>
              <span class="text-xs px-2 py-1 bg-{{this.severity}}-200 text-{{this.severity}}-800 rounded-full">{{this.severity}}</span>
            </div>
            <p class="text-xs text-{{this.severity}}-700 mb-1">{{this.description}}</p>
            <div class="text-xs text-{{this.severity}}-600">
              <span>Impact: {{this.impact}}</span>
              <span class="ml-2">Duration: {{this.duration}}</span>
            </div>
          </div>
          {{/each}}
        </div>
      </div>
      <div>
        <h4 class="font-semibold text-gray-800 mb-3">Resolved Issues</h4>
        <div class="space-y-3">
          {{#each blockers.resolved}}
          <div class="border-l-4 border-green-400 bg-green-50 p-3 rounded-r-lg">
            <div class="flex items-center justify-between mb-1">
              <span class="text-sm font-medium text-green-800">{{this.title}}</span>
              <span class="text-xs px-2 py-1 bg-green-200 text-green-800 rounded-full">Resolved</span>
            </div>
            <p class="text-xs text-green-700 mb-1">{{this.resolution}}</p>
            <div class="text-xs text-green-600">
              <span>Resolution time: {{this.resolutionTime}}</span>
            </div>
          </div>
          {{/each}}
        </div>
      </div>
    </div>
  </div>

  <!-- Recommendations -->
  <div class="bg-gradient-to-r from-emerald-50 to-green-50 rounded-xl p-6 border border-emerald-200">
    <h3 class="text-xl font-semibold text-gray-800 mb-4 flex items-center">
      <svg class="w-5 h-5 mr-2 text-emerald-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z"></path>
      </svg>
      Implementation Recommendations
    </h3>
    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
      {{#each recommendations}}
      <div class="bg-white rounded-lg p-4 shadow-sm">
        <div class="flex items-start">
          <div class="flex-shrink-0">
            <div class="w-8 h-8 rounded-full bg-{{this.priority}}-100 flex items-center justify-center">
              <svg class="w-4 h-4 text-{{this.priority}}-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="{{this.icon}}"></path>
              </svg>
            </div>
          </div>
          <div class="ml-3">
            <h4 class="text-sm font-medium text-gray-900">{{this.title}}</h4>
            <p class="text-sm text-gray-600 mt-1">{{this.description}}</p>
            <div class="mt-2 flex items-center space-x-2">
              <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium {{this.impactClass}}">
                {{this.impact}} Impact
              </span>
              <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium {{this.effortClass}}">
                {{this.effort}} Effort
              </span>
            </div>
          </div>
        </div>
      </div>
      {{/each}}
    </div>
  </div>
</div>

<script>
// Batch Progress Chart
const batchProgressCtx = document.getElementById('batchProgressChart').getContext('2d');
new Chart(batchProgressCtx, {
  type: 'bar',
  data: {
    labels: {{{json execution.batchLabels}}},
    datasets: [{
      label: 'Progress (%)',
      data: {{{json execution.batchData}}},
      backgroundColor: {{{json execution.batchColors}}},
      borderColor: {{{json execution.batchBorderColors}}},
      borderWidth: 1
    }]
  },
  options: {
    responsive: true,
    maintainAspectRatio: false,
    scales: {
      y: {
        beginAtZero: true,
        max: 100,
        title: {
          display: true,
          text: 'Progress (%)'
        }
      }
    },
    plugins: {
      legend: {
        display: false
      }
    }
  }
});

// Files Chart
const filesCtx = document.getElementById('filesChart').getContext('2d');
new Chart(filesCtx, {
  type: 'doughnut',
  data: {
    labels: {{{json files.chartLabels}}},
    datasets: [{
      data: {{{json files.chartData}}},
      backgroundColor: {{{json files.chartColors}}},
      borderWidth: 2,
      borderColor: '#ffffff'
    }]
  },
  options: {
    responsive: true,
    maintainAspectRatio: false,
    plugins: {
      legend: {
        position: 'bottom',
        labels: {
          padding: 20,
          usePointStyle: true
        }
      },
      title: {
        display: true,
        text: 'File Modifications'
      }
    }
  }
});

// Testing Chart
const testingCtx = document.getElementById('testingChart').getContext('2d');
new Chart(testingCtx, {
  type: 'radar',
  data: {
    labels: {{{json testing.chartLabels}}},
    datasets: [{
      label: 'Coverage %',
      data: {{{json testing.chartData}}},
      borderColor: 'rgba(34, 197, 94, 1)',
      backgroundColor: 'rgba(34, 197, 94, 0.2)',
      borderWidth: 2
    }]
  },
  options: {
    responsive: true,
    maintainAspectRatio: false,
    scales: {
      r: {
        beginAtZero: true,
        max: 100,
        ticks: {
          stepSize: 20
        }
      }
    },
    plugins: {
      legend: {
        position: 'bottom'
      }
    }
  }
});

// Performance Chart
const performanceCtx = document.getElementById('performanceChart').getContext('2d');
new Chart(performanceCtx, {
  type: 'line',
  data: {
    labels: {{{json performance.chartLabels}}},
    datasets: [
      {
        label: 'Response Time (ms)',
        data: {{{json performance.responseTimeData}}},
        borderColor: 'rgba(59, 130, 246, 1)',
        backgroundColor: 'rgba(59, 130, 246, 0.1)',
        borderWidth: 2,
        fill: false,
        tension: 0.4,
        yAxisID: 'y'
      },
      {
        label: 'Memory Usage (MB)',
        data: {{{json performance.memoryData}}},
        borderColor: 'rgba(239, 68, 68, 1)',
        backgroundColor: 'rgba(239, 68, 68, 0.1)',
        borderWidth: 2,
        fill: false,
        tension: 0.4,
        yAxisID: 'y1'
      },
      {
        label: 'CPU Usage (%)',
        data: {{{json performance.cpuData}}},
        borderColor: 'rgba(34, 197, 94, 1)',
        backgroundColor: 'rgba(34, 197, 94, 0.1)',
        borderWidth: 2,
        fill: false,
        tension: 0.4,
        yAxisID: 'y2'
      }
    ]
  },
  options: {
    responsive: true,
    maintainAspectRatio: false,
    scales: {
      y: {
        type: 'linear',
        display: true,
        position: 'left',
        title: {
          display: true,
          text: 'Response Time (ms)'
        }
      },
      y1: {
        type: 'linear',
        display: true,
        position: 'right',
        title: {
          display: true,
          text: 'Memory (MB)'
        },
        grid: {
          drawOnChartArea: false,
        },
      },
      y2: {
        type: 'linear',
        display: false,
        position: 'right'
      }
    },
    plugins: {
      legend: {
        position: 'top'
      }
    }
  }
});
</script>
{{/inline}} 