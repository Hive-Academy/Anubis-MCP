<%
// Template Variables
const title = "üìä Comprehensive Workflow Analysis";
const subtitle = "Complete Performance & Quality Overview";
const headerIcon = "üìä";
const reportType = "Comprehensive Analysis";
const generatedAt = data.generatedAt || new Date();
const dateRange = data.dateRange;

// Additional Styles for Comprehensive Report
const additionalStyles = `
    /* Comprehensive Report Specific Styles */
    .executive-summary {
        background: linear-gradient(135deg, var(--primary-500) 0%, var(--secondary-500) 100%);
        border-radius: var(--radius-xl);
        padding: var(--spacing-2xl);
        margin-bottom: var(--spacing-xl);
        color: white;
        position: relative;
        overflow: hidden;
    }
    
    .executive-summary::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grid" width="10" height="10" patternUnits="userSpaceOnUse"><path d="M 10 0 L 0 0 0 10" fill="none" stroke="rgba(255,255,255,0.1)" stroke-width="0.5"/></pattern></defs><rect width="100" height="100" fill="url(%23grid)"/></svg>');
        opacity: 0.3;
    }
    
    .executive-content {
        position: relative;
        z-index: 1;
    }
    
    .executive-title {
        font-size: 2rem;
        font-weight: 700;
        margin-bottom: var(--spacing-md);
        text-shadow: 0 2px 4px rgba(0,0,0,0.3);
    }
    
    .executive-stats {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: var(--spacing-lg);
        margin-top: var(--spacing-xl);
    }
    
    .executive-stat {
        text-align: center;
        padding: var(--spacing-lg);
        background: rgba(255, 255, 255, 0.1);
        border-radius: var(--radius-lg);
        backdrop-filter: blur(10px);
    }
    
    .executive-stat-value {
        font-size: 2.5rem;
        font-weight: 700;
        margin-bottom: var(--spacing-xs);
    }
    
    .executive-stat-label {
        font-size: 0.875rem;
        opacity: 0.9;
        text-transform: uppercase;
        letter-spacing: 0.05em;
    }
    
    .comprehensive-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
        gap: var(--spacing-xl);
        margin: var(--spacing-xl) 0;
    }
    
    .analysis-panel {
        background: var(--dark-surface);
        border: 1px solid var(--dark-border);
        border-radius: var(--radius-xl);
        padding: var(--spacing-xl);
        transition: all var(--transition-normal);
    }
    
    .analysis-panel:hover {
        transform: translateY(-4px);
        box-shadow: var(--shadow-xl);
    }
    
    .panel-header {
        display: flex;
        align-items: center;
        gap: var(--spacing-md);
        margin-bottom: var(--spacing-lg);
        padding-bottom: var(--spacing-md);
        border-bottom: 2px solid var(--dark-border);
    }
    
    .panel-icon {
        font-size: 1.5rem;
    }
    
    .panel-title {
        font-size: 1.25rem;
        font-weight: 600;
        color: var(--dark-text);
        margin: 0;
    }
    
    .insight-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: var(--spacing-lg);
        margin: var(--spacing-xl) 0;
    }
    
    .insight-card {
        background: var(--dark-surface);
        border: 1px solid var(--dark-border);
        border-radius: var(--radius-lg);
        padding: var(--spacing-lg);
        transition: all var(--transition-fast);
    }
    
    .insight-card:hover {
        border-color: var(--primary-500);
        transform: translateY(-2px);
    }
    
    .insight-header {
        display: flex;
        justify-content: between;
        align-items: flex-start;
        margin-bottom: var(--spacing-md);
    }
    
    .insight-title {
        font-weight: 600;
        color: var(--dark-text);
        margin-bottom: var(--spacing-xs);
    }
    
    .insight-description {
        color: var(--dark-text-muted);
        line-height: 1.5;
        margin-bottom: var(--spacing-md);
    }
    
    .comprehensive-charts {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));
        gap: var(--spacing-xl);
        margin: var(--spacing-xl) 0;
    }
    
    .chart-panel {
        background: var(--dark-surface);
        border: 1px solid var(--dark-border);
        border-radius: var(--radius-xl);
        padding: var(--spacing-xl);
    }
    
    .chart-header {
        margin-bottom: var(--spacing-lg);
        padding-bottom: var(--spacing-md);
        border-bottom: 1px solid var(--dark-border);
    }
    
    .chart-title {
        font-size: 1.125rem;
        font-weight: 600;
        color: var(--dark-text);
        margin: 0;
    }
    
    .chart-subtitle {
        font-size: 0.875rem;
        color: var(--dark-text-muted);
        margin-top: var(--spacing-xs);
    }
`;
%>

<%- include('base-layout', { 
    title, 
    subtitle, 
    headerIcon, 
    reportType, 
    generatedAt, 
    dateRange, 
    additionalStyles 
}) %>
<%- contentFor('body') %>
<div class="layout-main">
    <!-- Executive Summary -->
    <div class="executive-summary">
        <div class="executive-content">
            <h2 class="executive-title">üìä Executive Summary</h2>
            <% 
            const totalTasks = data.metrics.tasks?.totalTasks || 0;
            const completionRate = data.metrics.tasks?.completionRate || 0;
            const totalDelegations = data.metrics.delegations?.totalDelegations || 0;
            const approvalRate = data.metrics.codeReviews?.approvalRate || 0;
            const efficiency = data.metrics.performance?.implementationEfficiency || 0;
            %>
            <p>This comprehensive analysis covers <strong><%= totalTasks %></strong> tasks with a <strong><%= completionRate.toFixed(1) %>%</strong> completion rate. The workflow processed <strong><%= totalDelegations %></strong> delegations with a <strong><%= approvalRate.toFixed(1) %>%</strong> code review approval rate.</p>
            
            <div class="executive-stats">
                <div class="executive-stat">
                    <div class="executive-stat-value"><%= totalTasks %></div>
                    <div class="executive-stat-label">Total Tasks</div>
                </div>
                <div class="executive-stat">
                    <div class="executive-stat-value"><%= completionRate.toFixed(1) %>%</div>
                    <div class="executive-stat-label">Completion Rate</div>
                </div>
                <div class="executive-stat">
                    <div class="executive-stat-value"><%= totalDelegations %></div>
                    <div class="executive-stat-label">Delegations</div>
                </div>
                <div class="executive-stat">
                    <div class="executive-stat-value"><%= approvalRate.toFixed(1) %>%</div>
                    <div class="executive-stat-label">Approval Rate</div>
                </div>
                <% if (efficiency > 0) { %>
                <div class="executive-stat">
                    <div class="executive-stat-value"><%= efficiency.toFixed(1) %>%</div>
                    <div class="executive-stat-label">Efficiency</div>
                </div>
                <% } %>
            </div>
        </div>
    </div>

    <!-- Key Metrics -->
    <div class="comprehensive-grid">
        <div class="analysis-panel">
            <div class="panel-header">
                <span class="panel-icon">üìà</span>
                <h3 class="panel-title">Task Performance</h3>
            </div>
            <div class="metrics-grid">
                <div class="metric-card">
                    <div class="metric-value"><%= data.metrics.tasks?.totalTasks || 0 %></div>
                    <div class="metric-label">Total Tasks</div>
                </div>
                <div class="metric-card">
                    <div class="metric-value"><%= (data.metrics.tasks?.completionRate || 0).toFixed(1) %>%</div>
                    <div class="metric-label">Completion Rate</div>
                </div>
                <% if (data.metrics.tasks?.avgCompletionTimeHours) { %>
                <div class="metric-card">
                    <div class="metric-value"><%= data.metrics.tasks.avgCompletionTimeHours.toFixed(1) %>h</div>
                    <div class="metric-label">Avg Completion Time</div>
                </div>
                <% } %>
            </div>
        </div>
        
        <div class="analysis-panel">
            <div class="panel-header">
                <span class="panel-icon">üîÑ</span>
                <h3 class="panel-title">Delegation Analytics</h3>
            </div>
            <div class="metrics-grid">
                <div class="metric-card">
                    <div class="metric-value"><%= data.metrics.delegations?.totalDelegations || 0 %></div>
                    <div class="metric-label">Total Delegations</div>
                </div>
                <% if (data.metrics.delegations?.avgRedelegationCount) { %>
                <div class="metric-card">
                    <div class="metric-value"><%= data.metrics.delegations.avgRedelegationCount.toFixed(1) %></div>
                    <div class="metric-label">Avg Redelegations</div>
                </div>
                <% } %>
            </div>
        </div>
        
        <div class="analysis-panel">
            <div class="panel-header">
                <span class="panel-icon">üîç</span>
                <h3 class="panel-title">Code Review Quality</h3>
            </div>
            <div class="metrics-grid">
                <div class="metric-card">
                    <div class="metric-value"><%= data.metrics.codeReviews?.totalReviews || 0 %></div>
                    <div class="metric-label">Total Reviews</div>
                </div>
                <div class="metric-card">
                    <div class="metric-value"><%= (data.metrics.codeReviews?.approvalRate || 0).toFixed(1) %>%</div>
                    <div class="metric-label">Approval Rate</div>
                </div>
            </div>
        </div>
    </div>

    <!-- Key Insights -->
    <div class="insight-grid">
        <% if (data.metrics.tasks) { %>
            <% const { completedTasks, inProgressTasks, notStartedTasks } = data.metrics.tasks; %>
            <div class="insight-card">
                <div class="insight-header">
                    <h4 class="insight-title">üìã Task Distribution</h4>
                </div>
                <div class="insight-description">
                    <%= completedTasks || 0 %> completed, <%= inProgressTasks || 0 %> in progress, <%= notStartedTasks || 0 %> not started
                </div>
            </div>
        <% } %>
        
        <% if (data.metrics.delegations) { %>
            <% const { successfulDelegations, failedDelegations } = data.metrics.delegations; %>
            <% const successRate = ((successfulDelegations / (successfulDelegations + failedDelegations)) * 100) || 0; %>
            <div class="insight-card">
                <div class="insight-header">
                    <h4 class="insight-title">üîÑ Delegation Success</h4>
                </div>
                <div class="insight-description">
                    <%= successRate.toFixed(1) %>% success rate (<%= successfulDelegations || 0 %> successful, <%= failedDelegations || 0 %> failed)
                </div>
            </div>
        <% } %>
        
        <% if (data.metrics.codeReviews) { %>
            <% const { approvedReviews, needsChangesReviews } = data.metrics.codeReviews; %>
            <div class="insight-card">
                <div class="insight-header">
                    <h4 class="insight-title">üîç Review Outcomes</h4>
                </div>
                <div class="insight-description">
                    <%= approvedReviews || 0 %> approved, <%= needsChangesReviews || 0 %> need changes
                </div>
            </div>
        <% } %>
        
        <% if (data.metrics.performance?.mostActiveMode) { %>
            <div class="insight-card">
                <div class="insight-header">
                    <h4 class="insight-title">üë§ Most Active Role</h4>
                </div>
                <div class="insight-description">
                    <%= data.metrics.performance.mostActiveMode %>
                </div>
            </div>
        <% } %>
    </div>

    <!-- Enhanced Insights -->
    <% if (data.enhancedInsights && data.enhancedInsights.length > 0) { %>
    <div class="analysis-panel">
        <div class="panel-header">
            <span class="panel-icon">üß†</span>
            <h3 class="panel-title">AI-Generated Insights</h3>
        </div>
        <div class="enhanced-insights">
            <% data.enhancedInsights.slice(0, 5).forEach(insight => { %>
                <div class="insight-item">
                    <div class="insight-title"><%= insight.title %></div>
                    <div class="insight-description"><%= insight.description %></div>
                    <span class="insight-impact impact-<%= insight.impact %>"><%= insight.impact %> impact</span>
                    <% if (insight.actionableSteps && insight.actionableSteps.length > 0) { %>
                        <ul style="margin-top: 10px; font-size: 0.9rem;">
                            <% insight.actionableSteps.slice(0, 2).forEach(step => { %>
                                <li><%= step %></li>
                            <% }); %>
                        </ul>
                    <% } %>
                </div>
            <% }); %>
        </div>
    </div>
    <% } %>

    <!-- Detailed Analysis -->
    <div class="analysis-panel">
        <div class="panel-header">
            <span class="panel-icon">üìã</span>
            <h3 class="panel-title">Detailed Analysis</h3>
        </div>
                
                <% if (data.metrics.tasks) { %>
                <div class="analysis-section">
                    <h3>Task Performance Analysis</h3>
                    <p><strong>Total Tasks:</strong> <%= data.metrics.tasks.totalTasks %></p>
                    <p><strong>Completion Rate:</strong> <%= data.metrics.tasks.completionRate.toFixed(1) %>%</p>
                    <% if (data.metrics.tasks.avgCompletionTimeHours > 0) { %>
                        <p><strong>Average Completion Time:</strong> <%= data.metrics.tasks.avgCompletionTimeHours.toFixed(1) %> hours</p>
                    <% } %>
                    <% if (data.metrics.tasks.priorityDistribution && data.metrics.tasks.priorityDistribution.length > 0) { %>
                        <p><strong>Priority Distribution:</strong></p>
                        <ul>
                            <% data.metrics.tasks.priorityDistribution.forEach(priority => { %>
                                <li><%= priority.priority || 'Unassigned' %>: <%= priority.count %> tasks</li>
                            <% }); %>
                        </ul>
                    <% } %>
                </div>
                <% } %>

                <% if (data.metrics.delegations) { %>
                <div class="analysis-section">
                    <h3>Delegation Flow Analysis</h3>
                    <p><strong>Total Delegations:</strong> <%= data.metrics.delegations.totalDelegations %></p>
                    <% const successRate = ((data.metrics.delegations.successfulDelegations / data.metrics.delegations.totalDelegations) * 100) || 0; %>
                    <p><strong>Success Rate:</strong> <%= successRate.toFixed(1) %>%</p>
                    <p><strong>Average Redelegation Count:</strong> <%= data.metrics.delegations.avgRedelegationCount.toFixed(1) %></p>
                    <% if (data.metrics.delegations.modeTransitions && data.metrics.delegations.modeTransitions.length > 0) { %>
                        <p><strong>Most Common Transitions:</strong></p>
                        <ul>
                            <% data.metrics.delegations.modeTransitions.slice(0, 3).forEach(transition => { %>
                                <li><%= transition.fromMode %> ‚Üí <%= transition.toMode %>: <%= transition.count %> times</li>
                            <% }); %>
                        </ul>
                    <% } %>
                </div>
                <% } %>

                <% if (data.metrics.codeReviews) { %>
                <div class="analysis-section">
                    <h3>Code Review Quality Analysis</h3>
                    <p><strong>Total Reviews:</strong> <%= data.metrics.codeReviews.totalReviews %></p>
                    <p><strong>Approval Rate:</strong> <%= data.metrics.codeReviews.approvalRate.toFixed(1) %>%</p>
                    <% if (data.metrics.codeReviews.avgReviewTimeHours > 0) { %>
                        <p><strong>Average Review Time:</strong> <%= data.metrics.codeReviews.avgReviewTimeHours.toFixed(1) %> hours</p>
                    <% } %>
                </div>
                <% } %>

                <% if (data.metrics.implementationPlans) { %>
                <div class="analysis-section">
                    <h3>Implementation Plan Analysis</h3>
                    <p><strong>Total Plans:</strong> <%= data.metrics.implementationPlans.totalPlans %></p>
                    <p><strong>Completion Rate:</strong> <%= data.metrics.implementationPlans.batchCompletionRate.toFixed(1) %>%</p>
                    <p><strong>Average Batches per Plan:</strong> <%= data.metrics.implementationPlans.avgBatchesPerPlan.toFixed(1) %></p>
                    <p><strong>Estimation Accuracy:</strong> <%= data.metrics.implementationPlans.estimationAccuracy.toFixed(1) %>%</p>
                </div>
                <% } %>
            </div>

    <!-- Charts -->
    <% if (data.charts && data.charts.length > 0) { %>
    <div class="analysis-panel">
        <div class="panel-header">
            <span class="panel-icon">üìä</span>
            <h3 class="panel-title">Visual Analytics</h3>
        </div>
        <div class="chart-container">
            <% data.charts.slice(0, 4).forEach((chart, index) => { %>
                <div class="chart-wrapper">
                    <h4><%= chart.title %></h4>
                    <canvas id="chart<%= index %>" width="300" height="150"></canvas>
                </div>
            <% }); %>
        </div>
    </div>
    <% } %>

    <!-- Recommendations -->
    <% if (data.recommendations && data.recommendations.length > 0) { %>
    <div class="analysis-panel">
        <div class="panel-header">
            <span class="panel-icon">üí°</span>
            <h3 class="panel-title">Actionable Recommendations</h3>
        </div>
        <div class="recommendations">
            <ul>
                <% data.recommendations.forEach(recommendation => { %>
                    <li><%= recommendation %></li>
                <% }); %>
            </ul>
        </div>
    </div>
    <% } %>
    </div>
</div>

<%- contentFor('scripts') %>
<script>
        <% if (data.charts && data.charts.length > 0) { %>
            <% data.charts.slice(0, 4).forEach((chart, index) => { %>
                new Chart(document.getElementById('chart<%= index %>'), {
                    type: '<%= chart.type %>',
                    data: {
                        labels: <%- JSON.stringify(chart.labels) %>,
                        datasets: <%- JSON.stringify(chart.datasets) %>
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: { 
                                position: 'top',
                                labels: { boxWidth: 12, font: { size: 10 } }
                            }
                        },
                        scales: {
                            y: { beginAtZero: true, ticks: { font: { size: 10 } } },
                            x: { ticks: { font: { size: 10 } } }
                        }
                    }
                });
            <% }); %>
        <% } %>
    </script>
</body>
</html>