<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Role Performance Report - {{roleMetrics.role}}</title>
    
    <!-- Alpine.js -->
    <script defer src="https://unpkg.com/alpinejs@3.x.x/dist/cdn.min.js"></script>
    <!-- Tailwind CSS -->
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- Chart.js -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
    
    <style>
        .fade-in { animation: fadeIn 0.5s ease-in; }
        @keyframes fadeIn { from { opacity: 0; transform: translateY(20px); } to { opacity: 1; transform: translateY(0); } }
        .section-card { @apply bg-white rounded-xl shadow-lg p-6 mb-6; }
        .metric-card { @apply bg-gradient-to-br from-white to-gray-50 rounded-lg p-4 border border-gray-200; }
        .chart-container { @apply bg-white rounded-lg p-4 border border-gray-200; }
        .performance-indicator { @apply text-center p-4 rounded-lg border-2; }
    </style>
</head>
<body class="bg-gray-50 min-h-screen">
    <div x-data="rolePerformanceApp()" x-init="loadData()" class="container mx-auto px-4 py-8">
        
        <!-- Header -->
        <div class="section-card">
            <div class="flex items-center justify-between mb-4">
                <h1 class="text-3xl font-bold text-gray-900">
                    <i class="fas fa-user-tie text-purple-600 mr-3"></i>
                    Role Performance Report
                </h1>
                <div class="text-sm text-gray-500">
                    Generated: {{metadata.generatedAt}}
                </div>
            </div>
            
            <!-- Role Overview -->
            <div class="border-l-4 border-purple-500 pl-4">
                <h2 class="text-2xl font-semibold text-gray-900 mb-2" x-text="data.roleMetrics.role"></h2>
                <p class="text-gray-600 mb-4" x-text="data.roleMetrics.description"></p>
                
                <!-- Key Metrics Grid -->
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
                    <div class="metric-card text-center">
                        <div class="text-3xl font-bold text-blue-600" x-text="data.roleMetrics.tasksHandled"></div>
                        <div class="text-sm text-gray-600">Tasks Handled</div>
                    </div>
                    <div class="metric-card text-center">
                        <div class="text-3xl font-bold"
                             :class="data.roleMetrics.successRate > 80 ? 'text-green-600' : 'text-yellow-600'"
                             x-text="data.roleMetrics.successRate + '%'">
                        </div>
                        <div class="text-sm text-gray-600">Success Rate</div>
                    </div>
                    <div class="metric-card text-center">
                        <div class="text-3xl font-bold text-indigo-600" x-text="data.roleMetrics.averageDuration + 'h'"></div>
                        <div class="text-sm text-gray-600">Avg Duration</div>
                    </div>
                    <div class="metric-card text-center">
                        <div class="text-3xl font-bold"
                             :class="data.roleMetrics.efficiency > 90 ? 'text-green-600' : 'text-orange-600'"
                             x-text="data.roleMetrics.efficiency + '%'">
                        </div>
                        <div class="text-sm text-gray-600">Efficiency</div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Performance Indicators -->
        <div class="section-card">
            <h3 class="text-lg font-semibold text-gray-900 mb-4">
                <i class="fas fa-gauge text-green-600 mr-2"></i>
                Performance Indicators
            </h3>
            <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
                <!-- Quality Score -->
                <div class="performance-indicator"
                     :class="data.roleMetrics.qualityScore > 80 ? 'border-green-300 bg-green-50' : 'border-yellow-300 bg-yellow-50'">
                    <div class="text-2xl font-bold"
                         :class="data.roleMetrics.qualityScore > 80 ? 'text-green-600' : 'text-yellow-600'"
                         x-text="data.roleMetrics.qualityScore + '/100'">
                    </div>
                    <div class="text-sm font-medium text-gray-700">Quality Score</div>
                    <div class="text-xs text-gray-600 mt-1">Based on reviews & feedback</div>
                </div>
                
                <!-- Velocity Score -->
                <div class="performance-indicator"
                     :class="data.roleMetrics.velocityScore > 75 ? 'border-blue-300 bg-blue-50' : 'border-orange-300 bg-orange-50'">
                    <div class="text-2xl font-bold"
                         :class="data.roleMetrics.velocityScore > 75 ? 'text-blue-600' : 'text-orange-600'"
                         x-text="data.roleMetrics.velocityScore + '/100'">
                    </div>
                    <div class="text-sm font-medium text-gray-700">Velocity Score</div>
                    <div class="text-xs text-gray-600 mt-1">Task completion speed</div>
                </div>
                
                <!-- Collaboration Score -->
                <div class="performance-indicator"
                     :class="data.roleMetrics.collaborationScore > 85 ? 'border-purple-300 bg-purple-50' : 'border-gray-300 bg-gray-50'">
                    <div class="text-2xl font-bold"
                         :class="data.roleMetrics.collaborationScore > 85 ? 'text-purple-600' : 'text-gray-600'"
                         x-text="data.roleMetrics.collaborationScore + '/100'">
                    </div>
                    <div class="text-sm font-medium text-gray-700">Collaboration Score</div>
                    <div class="text-xs text-gray-600 mt-1">Delegation & handoff quality</div>
                </div>
            </div>
        </div>

        <!-- Performance Charts -->
        <div class="section-card">
            <h3 class="text-lg font-semibold text-gray-900 mb-4">
                <i class="fas fa-chart-area text-blue-600 mr-2"></i>
                Performance Analytics
            </h3>
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
                <!-- Performance Radar -->
                <div class="chart-container">
                    <h4 class="font-medium text-gray-700 mb-3">Performance Radar</h4>
                    <canvas id="performanceRadar" width="400" height="300"></canvas>
                </div>
                
                <!-- Trends Over Time -->
                <div class="chart-container">
                    <h4 class="font-medium text-gray-700 mb-3">Performance Trends</h4>
                    <canvas id="performanceTrends" width="400" height="300"></canvas>
                </div>
            </div>
        </div>

        <!-- Task Breakdown -->
        <div x-show="data.taskBreakdown" class="section-card">
            <h3 class="text-lg font-semibold text-gray-900 mb-4">
                <i class="fas fa-tasks text-indigo-600 mr-2"></i>
                Task Breakdown
            </h3>
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
                <!-- Status Distribution -->
                <div class="chart-container">
                    <h4 class="font-medium text-gray-700 mb-3">Task Status Distribution</h4>
                    <canvas id="statusBreakdown" width="400" height="200"></canvas>
                </div>
                
                <!-- Priority Distribution -->
                <div class="chart-container">
                    <h4 class="font-medium text-gray-700 mb-3">Priority Distribution</h4>
                    <canvas id="priorityBreakdown" width="400" height="200"></canvas>
                </div>
            </div>
        </div>

        <!-- Delegation Analysis -->
        <div x-show="data.delegationAnalysis" class="section-card">
            <h3 class="text-lg font-semibold text-gray-900 mb-4">
                <i class="fas fa-share-alt text-purple-600 mr-2"></i>
                Delegation Analysis
            </h3>
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                <div class="metric-card">
                    <h4 class="font-semibold text-gray-800 mb-3">Outgoing Delegations</h4>
                    <div class="text-2xl font-bold text-blue-600 mb-2" x-text="data.delegationAnalysis.outgoingCount"></div>
                    <div class="text-sm text-gray-600">
                        <span>Average handoff time: </span>
                        <span x-text="data.delegationAnalysis.averageHandoffTime + 'h'"></span>
                    </div>
                </div>
                <div class="metric-card">
                    <h4 class="font-semibold text-gray-800 mb-3">Incoming Delegations</h4>
                    <div class="text-2xl font-bold text-green-600 mb-2" x-text="data.delegationAnalysis.incomingCount"></div>
                    <div class="text-sm text-gray-600">
                        <span>Pickup time: </span>
                        <span x-text="data.delegationAnalysis.averagePickupTime + 'h'"></span>
                    </div>
                </div>
                <div class="metric-card">
                    <h4 class="font-semibold text-gray-800 mb-3">Escalations</h4>
                    <div class="text-2xl font-bold text-red-600 mb-2" x-text="data.delegationAnalysis.escalationCount"></div>
                    <div class="text-sm text-gray-600">
                        <span>Rate: </span>
                        <span x-text="data.delegationAnalysis.escalationRate + '%'"></span>
                    </div>
                </div>
            </div>
            
            <div x-show="data.delegationAnalysis?.commonPatterns?.length > 0" class="mt-6">
                <h4 class="font-medium text-gray-700 mb-3">Common Delegation Patterns</h4>
                <div class="space-y-2">
                    <template x-for="pattern in data.delegationAnalysis.commonPatterns || []" :key="pattern.id">
                        <div class="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                            <span class="text-sm font-medium" x-text="pattern.pattern"></span>
                            <span class="text-sm text-gray-600" x-text="pattern.frequency + ' times'"></span>
                        </div>
                    </template>
                </div>
            </div>
        </div>

        <!-- Strengths and Areas for Improvement -->
        <div x-show="data.insights" class="section-card">
            <h3 class="text-lg font-semibold text-gray-900 mb-4">
                <i class="fas fa-lightbulb text-yellow-600 mr-2"></i>
                Performance Insights
            </h3>
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
                <!-- Strengths -->
                <div class="bg-green-50 p-4 rounded-lg border border-green-200">
                    <h4 class="font-semibold text-green-800 mb-3">
                        <i class="fas fa-thumbs-up mr-2"></i>
                        Strengths
                    </h4>
                    <ul class="space-y-2">
                        <template x-for="strength in data.insights.strengths || []" :key="strength">
                            <li class="text-sm text-green-700 flex items-start">
                                <i class="fas fa-check-circle text-green-600 mr-2 mt-1 flex-shrink-0"></i>
                                <span x-text="strength"></span>
                            </li>
                        </template>
                    </ul>
                </div>
                
                <!-- Areas for Improvement -->
                <div class="bg-orange-50 p-4 rounded-lg border border-orange-200">
                    <h4 class="font-semibold text-orange-800 mb-3">
                        <i class="fas fa-arrow-up mr-2"></i>
                        Areas for Improvement
                    </h4>
                    <ul class="space-y-2">
                        <template x-for="improvement in data.insights.improvements || []" :key="improvement">
                            <li class="text-sm text-orange-700 flex items-start">
                                <i class="fas fa-exclamation-circle text-orange-600 mr-2 mt-1 flex-shrink-0"></i>
                                <span x-text="improvement"></span>
                            </li>
                        </template>
                    </ul>
                </div>
            </div>
            
            <div x-show="data.insights?.recommendations?.length > 0" class="mt-6 bg-blue-50 p-4 rounded-lg border border-blue-200">
                <h4 class="font-semibold text-blue-800 mb-3">
                    <i class="fas fa-lightbulb mr-2"></i>
                    Recommendations
                </h4>
                <ul class="space-y-2">
                    <template x-for="recommendation in data.insights.recommendations || []" :key="recommendation">
                        <li class="text-sm text-blue-700 flex items-start">
                            <i class="fas fa-arrow-right text-blue-600 mr-2 mt-1 flex-shrink-0"></i>
                            <span x-text="recommendation"></span>
                        </li>
                    </template>
                </ul>
            </div>
        </div>

        <!-- Recent Tasks -->
        <div x-show="data.recentTasks?.length > 0" class="section-card">
            <h3 class="text-lg font-semibold text-gray-900 mb-4">
                <i class="fas fa-history text-gray-600 mr-2"></i>
                Recent Tasks
            </h3>
            <div class="overflow-x-auto">
                <table class="min-w-full">
                    <thead class="bg-gray-50">
                        <tr>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Task</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Priority</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Duration</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Quality</th>
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200">
                        <template x-for="task in data.recentTasks || []" :key="task.id">
                            <tr>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="text-sm font-medium text-gray-900" x-text="task.name"></div>
                                    <div x-show="task.taskSlug" class="text-xs text-gray-500" x-text="task.taskSlug"></div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <span class="px-2 py-1 text-xs rounded-full"
                                          :class="{
                                            'bg-green-100 text-green-800': task.status === 'completed',
                                            'bg-blue-100 text-blue-800': task.status === 'in-progress',
                                            'bg-gray-100 text-gray-800': task.status === 'not-started',
                                            'bg-yellow-100 text-yellow-800': task.status === 'needs-review'
                                          }"
                                          x-text="task.status">
                                    </span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <span class="px-2 py-1 text-xs rounded"
                                          :class="{
                                            'bg-red-100 text-red-800': task.priority === 'Critical',
                                            'bg-orange-100 text-orange-800': task.priority === 'High',
                                            'bg-yellow-100 text-yellow-800': task.priority === 'Medium',
                                            'bg-gray-100 text-gray-800': task.priority === 'Low'
                                          }"
                                          x-text="task.priority">
                                    </span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                    <span x-show="task.duration" x-text="task.duration + 'h'"></span>
                                    <span x-show="!task.duration" class="text-gray-400">-</span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                    <div x-show="task.qualityScore" class="flex items-center">
                                        <span class="text-sm font-medium" x-text="task.qualityScore + '/100'"></span>
                                        <div class="ml-2 w-16 bg-gray-200 rounded-full h-2">
                                            <div class="h-2 rounded-full"
                                                 :class="{
                                                   'bg-green-500': task.qualityScore >= 80,
                                                   'bg-yellow-500': task.qualityScore >= 60 && task.qualityScore < 80,
                                                   'bg-red-500': task.qualityScore < 60
                                                 }"
                                                 :style="'width: ' + task.qualityScore + '%'">
                                            </div>
                                        </div>
                                    </div>
                                    <span x-show="!task.qualityScore" class="text-gray-400">-</span>
                                </td>
                            </tr>
                        </template>
                    </tbody>
                </table>
            </div>
        </div>

    </div>

    <!-- Safely embed JSON data -->
    <script type="application/json" id="role-performance-data">
        {{{jsonData}}}
    </script>

    <script>
        function rolePerformanceApp() {
            return {
                data: {},
                
                loadData() {
                    try {
                        const dataScript = document.getElementById('role-performance-data');
                        if (dataScript) {
                            this.data = JSON.parse(dataScript.textContent);
                        }
                    } catch (error) {
                        console.error('Failed to load role performance data:', error);
                    }
                    
                    // Initialize charts after data is loaded
                    this.$nextTick(() => {
                        this.initializeCharts();
                    });
                },

                initializeCharts() {
                    // Performance Radar Chart
                    const radarCtx = document.getElementById('performanceRadar');
                    if (radarCtx && this.data.roleMetrics) {
                        new Chart(radarCtx, {
                            type: 'radar',
                            data: {
                                labels: ['Quality', 'Velocity', 'Collaboration', 'Efficiency', 'Success Rate'],
                                datasets: [{
                                    label: this.data.roleMetrics.role || 'Performance',
                                    data: [
                                        this.data.roleMetrics.qualityScore || 0,
                                        this.data.roleMetrics.velocityScore || 0,
                                        this.data.roleMetrics.collaborationScore || 0,
                                        this.data.roleMetrics.efficiency || 0,
                                        this.data.roleMetrics.successRate || 0
                                    ],
                                    borderColor: 'rgb(99, 102, 241)',
                                    backgroundColor: 'rgba(99, 102, 241, 0.2)',
                                    pointBackgroundColor: 'rgb(99, 102, 241)',
                                    pointBorderColor: '#fff',
                                    pointHoverBackgroundColor: '#fff',
                                    pointHoverBorderColor: 'rgb(99, 102, 241)'
                                }]
                            },
                            options: {
                                responsive: true,
                                scales: {
                                    r: {
                                        beginAtZero: true,
                                        max: 100
                                    }
                                }
                            }
                        });
                    }

                    // Performance Trends Chart
                    const trendsCtx = document.getElementById('performanceTrends');
                    if (trendsCtx && this.data.performanceTrends) {
                        new Chart(trendsCtx, {
                            type: 'line',
                            data: {
                                labels: this.data.performanceTrends.labels || [],
                                datasets: [{
                                    label: 'Performance Score',
                                    data: this.data.performanceTrends.scores || [],
                                    borderColor: 'rgb(59, 130, 246)',
                                    backgroundColor: 'rgba(59, 130, 246, 0.1)',
                                    tension: 0.4
                                }]
                            },
                            options: {
                                responsive: true,
                                scales: {
                                    y: {
                                        beginAtZero: true,
                                        max: 100
                                    }
                                }
                            }
                        });
                    }

                    // Task Status Breakdown
                    const statusCtx = document.getElementById('statusBreakdown');
                    if (statusCtx && this.data.taskBreakdown?.statusDistribution) {
                        new Chart(statusCtx, {
                            type: 'doughnut',
                            data: {
                                labels: Object.keys(this.data.taskBreakdown.statusDistribution),
                                datasets: [{
                                    data: Object.values(this.data.taskBreakdown.statusDistribution),
                                    backgroundColor: [
                                        'rgb(34, 197, 94)',   // completed - green
                                        'rgb(59, 130, 246)',  // in-progress - blue
                                        'rgb(156, 163, 175)', // not-started - gray
                                        'rgb(245, 158, 11)',  // needs-review - yellow
                                        'rgb(239, 68, 68)'    // needs-changes - red
                                    ]
                                }]
                            },
                            options: {
                                responsive: true,
                                maintainAspectRatio: false
                            }
                        });
                    }

                    // Priority Distribution
                    const priorityCtx = document.getElementById('priorityBreakdown');
                    if (priorityCtx && this.data.taskBreakdown?.priorityDistribution) {
                        new Chart(priorityCtx, {
                            type: 'bar',
                            data: {
                                labels: Object.keys(this.data.taskBreakdown.priorityDistribution),
                                datasets: [{
                                    label: 'Tasks',
                                    data: Object.values(this.data.taskBreakdown.priorityDistribution),
                                    backgroundColor: [
                                        'rgb(239, 68, 68)',   // Critical - red
                                        'rgb(245, 158, 11)',  // High - orange
                                        'rgb(59, 130, 246)',  // Medium - blue
                                        'rgb(156, 163, 175)'  // Low - gray
                                    ]
                                }]
                            },
                            options: {
                                responsive: true,
                                maintainAspectRatio: false,
                                scales: {
                                    y: {
                                        beginAtZero: true
                                    }
                                }
                            }
                        });
                    }
                },

                formatDate(dateStr) {
                    if (!dateStr) return 'N/A';
                    return new Date(dateStr).toLocaleDateString();
                }
            };
        }
    </script>
</body>
</html> 